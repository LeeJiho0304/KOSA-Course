---------------------------------------------
-- 11.3 세션과 읽기 일관성의 의미 (p.298)
--------------------------------------------- 
-- 세션 : 하나의 연결(Connection) 
 -- 클라이언트와 서버는 여러 연결을 할 수 있음. Connection 객체 두개를 생성하면 두개의 세션이 생김 (하나의 똑같은 연결이 아님)
 -- 같은 계정으로 연결해도 접속을 하나 추가하면 다른 세션이다. 
 -- ex)localhost-hr 과 localhost-hr2는 같은 계정으로 접속했지만 세션은 2개
 -- 즉 연결이 다르면 세션이 다름

 
-- DB의 세션과 웹의 세션은 의미가 다름
-- DB의 세션은 같은 사용자라도 다른 세션으로 취급 
 
-- 웹에의 세션
-- 브라우저에서 웹서버로 요청을 하고 결과를 받으면 세션이 끊어짐
-- 다시 브라우저가 웹서버로 요청을하면 새로운 세션이 생김
-- 그런데 웹에서는 동일한 사용자가 요청을 하면 같은 세션으로 취급함

-- localhost-hr 세션
update boards
set btitle = '수정제목1'
where bno=1;

-- commit, rollback 을 쓰기전까지 트랜잭션이 종료되지않고 계속 실행중
-- 똑같은 작업(update) 다른 세션(localhost-hr2)에서 하면 계속 로딩만되고 안됨 (Lock 상태)

/* localhost-hr2 세션에서 실행문

update boards
set btitle = '수정제목1'
where bno=1;   --(x)localhost-hr에서 트랜잭션이 종료되지않고 계속 실행중이기 때문

select *
from boards
where bno=1;
-- 읽기는 가능하지만 현재 수정중인 데이터는 반영되어 읽어오지 못함
-- 변경(삽입, 수정, 삭제) 전 내용까지 읽어올 수 있음

commit;

update boards
set btitle = '수정제목1'
where bno=2;  --(o) bno=1만 lock 걸린 상태이므로 가능

*/
